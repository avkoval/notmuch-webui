** Installation
:PROPERTIES:
:CUSTOM_ID: installation
:END:
Download from https://github.com/ok/notmuch-webui

** Usage
:PROPERTIES:
:CUSTOM_ID: usage
:END:
FIXME: explanation

Run the project directly, via =:exec-fn=:

#+begin_example
$ clojure -X:run-x
Hello, Clojure!
#+end_example

Run the project, overriding the name to be greeted:

#+begin_example
$ clojure -X:run-x :name '"Someone"'
Hello, Someone!
#+end_example

Run the project directly, via =:main-opts= (=-m ok.notmuch-webui=):

#+begin_example
$ clojure -M:run-m
Hello, World!
#+end_example

Run the project, overriding the name to be greeted:

#+begin_example
$ clojure -M:run-m Via-Main
Hello, Via-Main!
#+end_example

Run the project's tests (they'll fail until you edit them):

#+begin_example
$ clojure -T:build test
#+end_example

Run the project's CI pipeline and build an uberjar (this will fail until
you edit the tests to pass):

#+begin_example
$ clojure -T:build ci
#+end_example

Run that uberjar:

#+begin_example
$ java -jar target/notmuch-webui-0.1.0-SNAPSHOT.jar
#+end_example

** Options
:PROPERTIES:
:CUSTOM_ID: options
:END:
FIXME: listing of options this app accepts.

** Examples
:PROPERTIES:
:CUSTOM_ID: examples
:END:
...

*** Bugs
:PROPERTIES:
:CUSTOM_ID: bugs
:END:
...

*** Any Other Sections
:PROPERTIES:
:CUSTOM_ID: any-other-sections
:END:
*** That You Think
:PROPERTIES:
:CUSTOM_ID: that-you-think
:END:
*** Might be Useful
:PROPERTIES:
:CUSTOM_ID: might-be-useful
:END:
** Implementaion plan
*** Maybe Next
**** TODO use google icon set?
     :LOGBOOK:
     - State "TODO"       from              [2025-03-08 Sat 19:50]
     :END:
**** NEXT hot reloading
     :LOGBOOK:
     CLOCK: [2025-03-08 Sat 18:32]--[2025-03-09 Sun 07:23] => 12:51
     - State "NEXT"       from "TODO"       [2025-03-07 Fri 20:15]
     - State "TODO"       from              [2025-03-07 Fri 20:15]
     :END:
 - [X] https://tonitalksdev.com/clojure-ring-hot-reloading-html-in-the-browser - Tried, does not work for me!?

**** NEXT Auto-running tests during development
     :LOGBOOK:
     - State "NEXT"       from "TODO"       [2025-03-02 Sun 17:05]
     - State "TODO"       from              [2025-03-02 Sun 11:10]
     :END:

**** TODO ~.env~ or ~edn~ based configuration
     :LOGBOOK:
     - State "TODO"       from              [2025-03-04 Tue 09:25]
     :END:

**** IDEA jetty9?
     :LOGBOOK:
     - State "IDEA"       from              [2025-03-02 Sun 11:20]
     :END:

     What is this and does it provide any additional benifit?
     - [ ] maybe use https://github.com/sunng87/ring-jetty9-adapter ?

**** DONE logging?
     CLOSED: [2025-03-08 Sat 19:50]
     :LOGBOOK:
     - State "DONE"       from "NEXT"       [2025-03-08 Sat 19:50]
     - State "NEXT"       from              [2025-03-02 Sun 11:15]
     :END:

     #+begin_example
     ;; Notes on logging: https://gist.github.com/jacobobryant/76b7a08a07d5ef2cc076b048d078f1f3
     org.slf4j/slf4j-simple     {:mvn/version "2.0.0-alpha5"}
     org.slf4j/log4j-over-slf4j {:mvn/version "1.7.36"}
     org.slf4j/jul-to-slf4j     {:mvn/version "1.7.36"}
     org.slf4j/jcl-over-slf4j   {:mvn/version "1.7.36"}
     #+end_example

*** DONE Bootstraping plan of [2025-03-02 Sun] [100%]
    CLOSED: [2025-03-04 Tue 09:20]
    :LOGBOOK:
    - State "DONE"       from              [2025-03-04 Tue 09:20]
    :END:
**** DONE web server/jetty start
     CLOSED: [2025-03-02 Sun 17:10]
     :LOGBOOK:
     - State "DONE"       from "DELEGATE"   [2025-03-02 Sun 17:10]
     - State "DONE"       from              [2025-03-02 Sun 11:10]
     :END:
**** DONE cider-nrepl
     CLOSED: [2025-03-02 Sun 11:10]
     :LOGBOOK:
     - State "DONE"       from "TODO"       [2025-03-02 Sun 11:10]
     - State "TODO"       from              [2025-03-02 Sun 11:10]
     :END:
**** DONE How to reload code during development?
     CLOSED: [2025-03-02 Sun 11:00]
     :LOGBOOK:
     - State "DONE"       from "TODO"       [2025-03-02 Sun 11:00]
     - State "TODO"       from              [2025-03-02 Sun 10:55]
     :END:

     Following this advice:
     https://tonitalksdev.com/clojure-ring-hot-reload-server-on-code-changes -- Works!

**** DONE Dev server reload on save
     CLOSED: [2025-03-02 Sun 11:10]
     :LOGBOOK:
     - State "DONE"       from              [2025-03-02 Sun 11:10]
     :END:
**** DONE routing
     CLOSED: [2025-03-02 Sun 11:10]
     :LOGBOOK:
     - State "DONE"       from              [2025-03-02 Sun 11:10]
     :END:

**** DONE Selmer
     CLOSED: [2025-03-02 Sun 14:45]
     :LOGBOOK:
     - State "DONE"       from "WORKING"    [2025-03-02 Sun 14:45]
     CLOCK: [2025-03-02 Sun 14:38]--[2025-03-02 Sun 14:46] =>  0:08
     - State "WORKING"    from "TODO"       [2025-03-02 Sun 11:55]
     - State "TODO"       from              [2025-03-02 Sun 11:10]
     :END:

**** DONE Bulma CSS
     CLOSED: [2025-03-02 Sun 15:25]
     :LOGBOOK:
     - State "DONE"       from "TODO"       [2025-03-02 Sun 15:25]
     - State "TODO"       from              [2025-03-02 Sun 11:10]
     :END:

**** DONE data-star [3/3]
     CLOSED: [2025-03-02 Sun 15:25]
     :LOGBOOK:
     - State "DONE"       from "WORKING"    [2025-03-02 Sun 15:25]
     - State "WORKING"    from "TODO"       [2025-03-02 Sun 11:20]
     CLOCK: [2025-03-02 Sun 11:18]--[2025-03-02 Sun 11:55] =>  0:37
     - State "TODO"       from              [2025-03-02 Sun 11:10]
     :END:

 - [X] Frontend / code / package
 - [X] Rendering static
 - [X] Backend

**** Unsorted

*** TODO Screens [10%]
    :PROPERTIES:
    :COOKIE_DATA: recursive
    :END:
    :LOGBOOK:
    - State "TODO"       from              [2025-03-04 Tue 09:20]
    :END:

**** Messgage list screen [14%]
     :LOGBOOK:
     CLOCK: [2025-03-08 Sat 18:16]--[2025-03-08 Sat 18:16] =>  0:00
     :END:
    
  The concepts of Server Side Events (SSE) allows us to assume that our screen is a function and we should re-render it depending on 
  the state on server.

***** WORKING use query arguments
      :LOGBOOK:
      CLOCK: [2025-03-10 Mon 07:32]--[2025-03-10 Mon 09:00] =>  1:28
      CLOCK: [2025-03-09 Sun 07:23]--[2025-03-09 Sun 12:57] =>  5:34
      CLOCK: [2025-03-08 Sat 18:16]--[2025-03-08 Sat 18:32] =>  0:16
      - State "WORKING"    from "TODO"       [2025-03-08 Sat 18:15]
      - State "TODO"       from              [2025-03-08 Sat 18:00]
      :END:

 - [ ] use default query arguments
   - How to decode JSON params?
     - https://stackoverflow.com/questions/37397531/ring-read-body-of-a-http-request-as-string
     - 
 - [X] reload part of page on POST
 - [X] reload on SPC
 - [X] paginator page switch logic
 - [ ] use paginator argument in rendering!
 - [ ] move out part of code with table to ~defn~!
 - [ ] make sure no code injection is possible due to edn/read!
 - [ ] enter page number in paginator?

***** TODO Add settings
      :LOGBOOK:
      - State "TODO"       from              [2025-03-08 Sat 18:00]
      :END:
 - [ ] number of messages per screen
   - [ ] option to match screen size
   - [ ] option to infinite scroll
 - [ ] sort

***** TODO tag to translate unixtime to locatime?
      :LOGBOOK:
      - State "TODO"       from              [2025-03-08 Sat 18:10]
      :END:

***** TODO Thread view (from notmuch show)
      :LOGBOOK:
      - State "TODO"       from              [2025-03-08 Sat 18:05]
      :END:

***** TODO paginator
      :LOGBOOK:
      - State "TODO"       from              [2025-03-08 Sat 18:05]
      :END:

***** DONE run notmuch search
      CLOSED: [2025-03-08 Sat 18:00]
      :LOGBOOK:
      - State "DONE"       from "TODO"       [2025-03-08 Sat 18:00]
      - State "TODO"       from              [2025-03-04 Tue 09:20]
      :END:

***** IDEA (maybe) re-render when the new message arrives?
      :LOGBOOK:
      - State "IDEA"       from "TODO"       [2025-03-04 Tue 09:20]
      :END:

**** TODO Endless scrolling on scroll down
      :LOGBOOK:
      - State "TODO"       from              [2025-03-02 Sun 17:25]
      :END:

***** WORKING First layout: vertical, like in emacs, mesages list
      :LOGBOOK:
      CLOCK: [2025-03-02 Sun 17:50]--[2025-03-02 Sun 18:00] =>  0:10
      - State "WORKING"    from "TODO"       [2025-03-02 Sun 17:50]
      - State "TODO"       from              [2025-03-02 Sun 17:25]
      :END:

 - [ ] Title
 - [ ] List of messages for this screen

***** TODO Search [/]
      
 /Idea: Use ~space~ or ~Enter~ as a signal to query the server./

**** Display message screen [%]
**** Configuration screen

   Optional, in best case we must be able to show everything based on defaults (default config)

** License
:PROPERTIES:
:CUSTOM_ID: license
:END:
Copyright Â© 2025 Oleksii

Distributed under the MIT License
