
Notmuch WebUI - an interface to [[https://notmuchmail.org][notmuch]] mail indexing system.

** Motivation
:PROPERTIES:
:CUSTOM_ID: motiv
:END:

I am a user of ~notmuch~, but I am experiencing some issues with HTML rendering in [[https://www.gnu.org/software/emacs/][Emacs]]. I have tried several
clients from https://notmuchmail.org/frontends/ but have not found a fully satisfying experience. And so I decided
to give it a try and develop an own Web based frontend.

So, I am doing this to:

 - Because it is good practice called: [[https://en.wikipedia.org/wiki/Eating_your_own_dog_food]["Eating your own dog food"]] - I am heavy user of my own
   product, which should lead to good experience for me and others.
 - To try new technology (e.g. [[https://data-star.dev][data-*]] - which is *excellent* and *inspiring*!)
 - To showcase that _I can develop in_ Clojure ([[https://www.linkedin.com/in/avkoval/][to potential employers]]), I have tried in the past to switch to being a
   Clojure developer. However, it seems that most companies are looking for ~mid-level~ developers, so I need to gain
   experience on my own before applying again.
 - Because it is fun!

** Usage
:PROPERTIES:
:CUSTOM_ID: usage
:END:

*** Dev mode
:PROPERTIES:
:CUSTOM_ID: dev-mode
:END:

    #+begin_example
    clj -M:dev
    #+end_example

** COMMENT Implementaion plan

   #+begin_quote
   I am sharing my upcoming plans here. After some time, the old sections will be deleted. I am doing 
   this work outside of my working hours or on weekends, as I am very busy with my primary job.
   #+end_quote

*** Maybe Next
**** TODO use google icon set?
     :LOGBOOK:
     - State "TODO"       from              [2025-03-08 Sat 19:50]
     :END:
**** NEXT hot reloading
     :LOGBOOK:
     CLOCK: [2025-03-08 Sat 18:32]--[2025-03-09 Sun 07:23] => 12:51
     - State "NEXT"       from "TODO"       [2025-03-07 Fri 20:15]
     - State "TODO"       from              [2025-03-07 Fri 20:15]
     :END:
 - [X] https://tonitalksdev.com/clojure-ring-hot-reloading-html-in-the-browser - Tried, does not work for me!?

**** NEXT Auto-running tests during development
     :LOGBOOK:
     - State "NEXT"       from "TODO"       [2025-03-02 Sun 17:05]
     - State "TODO"       from              [2025-03-02 Sun 11:10]
     :END:

**** TODO ~.env~ or ~edn~ based configuration
     :LOGBOOK:
     - State "TODO"       from              [2025-03-04 Tue 09:25]
     :END:

**** IDEA jetty9?
     :LOGBOOK:
     - State "IDEA"       from              [2025-03-02 Sun 11:20]
     :END:

     What is this and does it provide any additional benifit?
     - [ ] maybe use https://github.com/sunng87/ring-jetty9-adapter ?

**** DONE logging?
     CLOSED: [2025-03-08 Sat 19:50]
     :LOGBOOK:
     - State "DONE"       from "NEXT"       [2025-03-08 Sat 19:50]
     - State "NEXT"       from              [2025-03-02 Sun 11:15]
     :END:

     #+begin_example
     ;; Notes on logging: https://gist.github.com/jacobobryant/76b7a08a07d5ef2cc076b048d078f1f3
     org.slf4j/slf4j-simple     {:mvn/version "2.0.0-alpha5"}
     org.slf4j/log4j-over-slf4j {:mvn/version "1.7.36"}
     org.slf4j/jul-to-slf4j     {:mvn/version "1.7.36"}
     org.slf4j/jcl-over-slf4j   {:mvn/version "1.7.36"}
     #+end_example

*** DONE Bootstraping plan of [2025-03-02 Sun] [100%]
    CLOSED: [2025-03-04 Tue 09:20]
    :LOGBOOK:
    - State "DONE"       from              [2025-03-04 Tue 09:20]
    :END:
**** DONE web server/jetty start
     CLOSED: [2025-03-02 Sun 17:10]
     :LOGBOOK:
     - State "DONE"       from "DELEGATE"   [2025-03-02 Sun 17:10]
     - State "DONE"       from              [2025-03-02 Sun 11:10]
     :END:
**** DONE cider-nrepl
     CLOSED: [2025-03-02 Sun 11:10]
     :LOGBOOK:
     - State "DONE"       from "TODO"       [2025-03-02 Sun 11:10]
     - State "TODO"       from              [2025-03-02 Sun 11:10]
     :END:
**** DONE How to reload code during development?
     CLOSED: [2025-03-02 Sun 11:00]
     :LOGBOOK:
     - State "DONE"       from "TODO"       [2025-03-02 Sun 11:00]
     - State "TODO"       from              [2025-03-02 Sun 10:55]
     :END:

     Following this advice:
     https://tonitalksdev.com/clojure-ring-hot-reload-server-on-code-changes -- Works!

**** DONE Dev server reload on save
     CLOSED: [2025-03-02 Sun 11:10]
     :LOGBOOK:
     - State "DONE"       from              [2025-03-02 Sun 11:10]
     :END:
**** DONE routing
     CLOSED: [2025-03-02 Sun 11:10]
     :LOGBOOK:
     - State "DONE"       from              [2025-03-02 Sun 11:10]
     :END:

**** DONE Selmer
     CLOSED: [2025-03-02 Sun 14:45]
     :LOGBOOK:
     - State "DONE"       from "WORKING"    [2025-03-02 Sun 14:45]
     CLOCK: [2025-03-02 Sun 14:38]--[2025-03-02 Sun 14:46] =>  0:08
     - State "WORKING"    from "TODO"       [2025-03-02 Sun 11:55]
     - State "TODO"       from              [2025-03-02 Sun 11:10]
     :END:

**** DONE Bulma CSS
     CLOSED: [2025-03-02 Sun 15:25]
     :LOGBOOK:
     - State "DONE"       from "TODO"       [2025-03-02 Sun 15:25]
     - State "TODO"       from              [2025-03-02 Sun 11:10]
     :END:

**** DONE data-star [3/3]
     CLOSED: [2025-03-02 Sun 15:25]
     :LOGBOOK:
     - State "DONE"       from "WORKING"    [2025-03-02 Sun 15:25]
     - State "WORKING"    from "TODO"       [2025-03-02 Sun 11:20]
     CLOCK: [2025-03-02 Sun 11:18]--[2025-03-02 Sun 11:55] =>  0:37
     - State "TODO"       from              [2025-03-02 Sun 11:10]
     :END:

 - [X] Frontend / code / package
 - [X] Rendering static
 - [X] Backend

**** Unsorted

*** TODO Screens [20%]
    :PROPERTIES:
    :COOKIE_DATA: recursive
    :END:
    :LOGBOOK:
    - State "TODO"       from              [2025-03-04 Tue 09:20]
    :END:
**** Messgage list screen [27%]
     :LOGBOOK:
     CLOCK: [2025-03-08 Sat 18:16]--[2025-03-08 Sat 18:16] =>  0:00
     :END:
    
  The concepts of Server Side Events (SSE) allows us to assume that our screen is a function and we should re-render it depending on 
  the state on server.

***** TODO set correct URL & reload to work
      :LOGBOOK:
      - State "TODO"       from              [2025-03-16 Sun 10:05]
      :END:

***** TODO Make paginator async!
      :LOGBOOK:
      - State "TODO"       from              [2025-03-14 Fri 21:05]
      :END:

 .. so we won't wait until count finishes. make it finish async
 
 Use *Lazy Load*: https://data-star.dev/examples/lazy_load

***** DONE go next/prev page on ~Right~/~Left~
      CLOSED: [2025-03-17 Mon 10:10]
      :LOGBOOK:
      - State "DONE"       from "TODO"       [2025-03-17 Mon 10:10]
      - State "TODO"       from              [2025-03-14 Fri 21:10]
      :END:

***** TODO append on ~Page Down~
      :LOGBOOK:
      - State "TODO"       from              [2025-03-14 Fri 21:10]
      :END:

***** DONE Add cache for ~notmuch count~ because threads counting is resource intensive!
      CLOSED: [2025-03-16 Sun 10:00]
      :LOGBOOK:
      - State "DONE"       from "TODO"       [2025-03-16 Sun 10:00]
      - State "TODO"       from              [2025-03-14 Fri 21:05]
      :END:

***** DONE fix issue with additional spaces
      CLOSED: [2025-03-14 Fri 20:35]
      :LOGBOOK:
      - State "DONE"       from "WORKING"    [2025-03-14 Fri 20:35]
      CLOCK: [2025-03-14 Fri 20:27]--[2025-03-14 Fri 20:35] =>  0:08
      - State "WORKING"    from "TODO"       [2025-03-14 Fri 20:25]
      - State "TODO"       from              [2025-03-14 Fri 20:25]
      :END:

***** WORKING fix count mismatch between ~count~ and actual results in ~search~
      :LOGBOOK:
      - State "WORKING"    from              [2025-03-14 Fri 20:40]
      :END:


****** WORKING switch to 1st page after search term change, if paginator current page > pages
       :LOGBOOK:
       CLOCK: [2025-03-16 Sun 10:00]--[2025-03-16 Sun 13:03] =>  3:03
       - State "WORKING"    from "TODO"       [2025-03-16 Sun 10:00]
       - State "TODO"       from              [2025-03-16 Sun 10:00]
       :END:

  - switch to last page!

***** TODO open message screen on subject click
      :LOGBOOK:
      - State "TODO"       from              [2025-03-14 Fri 20:25]
      :END:

***** WORKING use query arguments
      :LOGBOOK:
      CLOCK: [2025-03-10 Mon 07:32]--[2025-03-10 Mon 09:00] =>  1:28
      CLOCK: [2025-03-09 Sun 07:23]--[2025-03-09 Sun 12:57] =>  5:34
      CLOCK: [2025-03-08 Sat 18:16]--[2025-03-08 Sat 18:32] =>  0:16
      - State "WORKING"    from "TODO"       [2025-03-08 Sat 18:15]
      - State "TODO"       from              [2025-03-08 Sat 18:00]
      :END:

 - [X] use default query arguments
   - How to decode JSON params?
     - https://stackoverflow.com/questions/37397531/ring-read-body-of-a-http-request-as-string
     - 
 - [X] reload part of page on POST
 - [X] reload on SPC
 - [X] paginator page switch logic
 - [X] use paginator argument in rendering!
 - [ ] move out part of code with table to ~defn~!
 - [ ] make sure no code injection is possible due to edn/read!
 - +[ ] enter page number in paginator?+

***** TODO Add settings
      :LOGBOOK:
      - State "TODO"       from              [2025-03-08 Sat 18:00]
      :END:
 - [ ] number of messages per screen
   - [ ] option to match screen size
   - [ ] option to infinite scroll
 - [ ] sort

***** TODO tag to translate unixtime to locatime?
      :LOGBOOK:
      - State "TODO"       from              [2025-03-08 Sat 18:10]
      :END:

***** TODO Thread view (from notmuch show)
      :LOGBOOK:
      - State "TODO"       from              [2025-03-08 Sat 18:05]
      :END:

***** WORKING paginator via signal [0/3]
      :LOGBOOK:
      CLOCK: [2025-03-13 Thu 08:22]--[2025-03-13 Thu 09:20] =>  0:58
      - State "WORKING"    from "TODO"       [2025-03-13 Thu 08:20]
      - State "TODO"       from              [2025-03-13 Thu 08:20]
      :END:

 - [X] change page via signal
   - [X] use effect!
   - +[ ] measure load time!+
 - +[ ] change ... to avg!! and add label!+
 - [ ] adopt query string change

***** DONE paginator
      CLOSED: [2025-03-13 Thu 08:20]
      :LOGBOOK:
      - State "DONE"       from "TODO"       [2025-03-13 Thu 08:20]
      - State "TODO"       from              [2025-03-08 Sat 18:05]
      :END:

***** DONE run notmuch search
      CLOSED: [2025-03-08 Sat 18:00]
      :LOGBOOK:
      - State "DONE"       from "TODO"       [2025-03-08 Sat 18:00]
      - State "TODO"       from              [2025-03-04 Tue 09:20]
      :END:

***** TODO sanitize all user input!
      :LOGBOOK:
      - State "TODO"       from              [2025-03-12 Wed 09:50]
      :END:

***** IDEA (maybe) re-render when the new message arrives?
      :LOGBOOK:
      - State "IDEA"       from "TODO"       [2025-03-04 Tue 09:20]
      :END:

**** TODO Endless scrolling on scroll down
      :LOGBOOK:
      - State "TODO"       from              [2025-03-02 Sun 17:25]
      :END:

***** WORKING First layout: vertical, like in emacs, mesages list
      :LOGBOOK:
      CLOCK: [2025-03-02 Sun 17:50]--[2025-03-02 Sun 18:00] =>  0:10
      - State "WORKING"    from "TODO"       [2025-03-02 Sun 17:50]
      - State "TODO"       from              [2025-03-02 Sun 17:25]
      :END:

 - [ ] Title
 - [ ] List of messages for this screen

***** TODO Search [/]
      
 /Idea: Use ~space~ or ~Enter~ as a signal to query the server./

**** Display message screen [%]
**** Configuration screen

   Optional, in best case we must be able to show everything based on defaults (default config)

** License

:PROPERTIES:
:CUSTOM_ID: license
:END:
Copyright © 2025 Oleksii Koval

Distributed under the MIT License
